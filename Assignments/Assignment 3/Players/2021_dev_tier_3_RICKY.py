# -? "RICKY"
def lll11lllllll1l11l1ll (OOOO0OOOOO0OOOOOO ):
	return chr (int (OOOO0OOOOO0OOOOOO [0 ]/3 ))+chr (int (OOOO0OOOOO0OOOOOO [1 ]/3 ))
def ll11111l111lllll1l1l (OO00OOO00OOOO0O0O ):
	return (ord (OO00OOO00OOOO0O0O [0 ])*3 ,ord (OO00OOO00OOOO0O0O [1 ])*3 )
def ll1ll1ll1l1l111111ll (O0OO0OOOOOOOOO00O ,O000000OO0OO00OOO ):
	OO0OOO0O0O0OOO0O0 =[]
	OO0OOO0O0O0OOO0O0 .append ((0 ,O0OO0OOOOOOOOO00O [1 ]+O0OO0OOOOOOOOO00O [0 ]*(O000000OO0OO00OOO [1 ]-O0OO0OOOOOOOOO00O [1 ])/(O0OO0OOOOOOOOO00O [0 ]+O000000OO0OO00OOO [0 ])))
	OO0OOO0O0O0OOO0O0 .append ((750 ,O0OO0OOOOOOOOO00O [1 ]+(750 -O0OO0OOOOOOOOO00O [0 ])*(O000000OO0OO00OOO [1 ]-O0OO0OOOOOOOOO00O [1 ])/((750 -O0OO0OOOOOOOOO00O [0 ])+(750 -O000000OO0OO00OOO [0 ]))))
	OO0OOO0O0O0OOO0O0 .append ((O0OO0OOOOOOOOO00O [0 ]+O0OO0OOOOOOOOO00O [1 ]*(O000000OO0OO00OOO [0 ]-O0OO0OOOOOOOOO00O [0 ])/(O0OO0OOOOOOOOO00O [1 ]+O000000OO0OO00OOO [1 ]),0 ))
	OO0OOO0O0O0OOO0O0 .append ((O0OO0OOOOOOOOO00O [0 ]+(750 -O0OO0OOOOOOOOO00O [1 ])*(O000000OO0OO00OOO [0 ]-O0OO0OOOOOOOOO00O [0 ])/((750 -O0OO0OOOOOOOOO00O [1 ])+(750 -O000000OO0OO00OOO [1 ])),750 ))
	O00O000O00OOOOOOO =OO0OOO0O0O0OOO0O0 [3 ];
	O00OOOOO000O0000O =0 
	O00000OO0O0O0O000 =[]
	for OOOOO0O0OOO0OO00O in range (0 ,4 ):
		O00O0O0OOO0O00OO0 =(OO0OOO0O0O0OOO0O0 [OOOOO0O0OOO0OO00O ][0 ]-O0OO0OOOOOOOOO00O [0 ],OO0OOO0O0O0OOO0O0 [OOOOO0O0OOO0OO00O ][1 ]-O0OO0OOOOOOOOO00O [1 ])
		O00O0000OO00OOO00 =degrees (atan2 (O00O0O0OOO0O00OO0 [1 ],O00O0O0OOO0O00OO0 [0 ]))
		O00OO000000OOO0O0 =[0 ,90 ,180 ,270 ]
		O0OOOOOO0O0000O0O =(O00O0O0OOO0O00OO0 [0 ]**2 +O00O0O0OOO0O00OO0 [1 ]**2 )**0.5 
		OOO00O0O0OOO0OO0O =False 
		for O00O00OO0OO0O00OO in range (0 ,4 ):
			OO0O00O00OO00OO00 =((O00OO000000OOO0O0 [O00O00OO0OO0O00OO ]-O00O0000OO00OOO00 )+360 )%360 
			if OO0O00O00OO00OO00 <2 or OO0O00O00OO00OO00 >358 or O0OOOOOO0O0000O0O <100 :
				if O0OOOOOO0O0000O0O <100 :
					OOOOOOOO0O0O0OOOO =30 
					O0OO0O0O00O000000 =60 
					O0O0OO0OOO00O0O0O =100 
					O0OOOO0O0OO0OOOOO =5 
					O0O0O0OO0OOOO00OO =O0OOOOOO0O0000O0O -OOOOOOOO0O0O0OOOO 
					OOO0OO0O00O0OOO00 =O0O0O0OO0OOOO00OO /float (O0O0OO0OOO00O0O0O -OOOOOOOO0O0O0OOOO )
					OOO00O00OO0OOOO0O =O0OOOO0O0OO0OOOOO *OOO0OO0O00O0OOO00 +O0OO0O0O00O000000 *(1.0 -OOO0OO0O00O0OOO00 )
					if OO0O00O00OO00OO00 <OOO00O00OO0OOOO0O or OO0O00O00OO00OO00 >(360 -OOO00O00OO0OOOO0O ):
						OOO00O0O0OOO0OO0O =True 
						break 
				else :
					OOO00O0O0OOO0OO0O =True 
					break 
		if OOO00O0O0OOO0OO0O :
			O00000OO0O0O0O000 .append (9999999 )
			continue 
		(O0OOO0O0OOO0OO0OO ,_O0O0O0O00OOOOO0OO ,_O0O0O0O00OOOOO0OO )=get_the_radar_data (O00O0000OO00OOO00 )
		if O0OOO0O0OOO0OO0OO !="column":
			OOO0OO0O0000O0O00 =((O0OO0OOOOOOOOO00O [0 ]-OO0OOO0O0O0OOO0O0 [OOOOO0O0OOO0OO00O ][0 ])**2 +(O0OO0OOOOOOOOO00O [1 ]-OO0OOO0O0O0OOO0O0 [OOOOO0O0OOO0OO00O ][1 ])**2 )**0.5 
			OOO0OO0O0000O0O00 +=((OO0OOO0O0O0OOO0O0 [OOOOO0O0OOO0OO00O ][0 ]-O000000OO0OO00OOO [0 ])**2 +(OO0OOO0O0O0OOO0O0 [OOOOO0O0OOO0OO00O ][1 ]-O000000OO0OO00OOO [1 ])**2 )**0.5 ;
			O00000OO0O0O0O000 .append (OOO0OO0O0000O0O00 )
			if O00000OO0O0O0O000 [OOOOO0O0OOO0OO00O ]<O00000OO0O0O0O000 [O00OOOOO000O0000O ]:
				O00OOOOO000O0000O =OOOOO0O0OOO0OO00O 
		else :
			O00000OO0O0O0O000 .append (9999999 )
	O00O000O00OOOOOOO =OO0OOO0O0O0OOO0O0 [O00OOOOO000O0000O ]
	OO00OOO00OO000O0O =[]
	OO00OOO00OO000O0O .append ((int (O000000OO0OO00OOO [0 ]),int (O000000OO0OO00OOO [1 ]),20 ))
	OO00OOO00OO000O0O .append ((int (O000000OO0OO00OOO [0 ]),int (O000000OO0OO00OOO [1 ]),15 ))
	OO00OOO00OO000O0O .append ((int (O000000OO0OO00OOO [0 ]),int (O000000OO0OO00OOO [1 ]),10 ))
	OO00OOO00OO000O0O .append ((int (O000000OO0OO00OOO [0 ]),int (O000000OO0OO00OOO [1 ]),5 ))
	OO00OOO00OO000O0O .append ((int (O0OO0OOOOOOOOO00O [0 ]),int (O0OO0OOOOOOOOO00O [1 ]),30 ))
	OO00OOO00OO000O0O .append ((int (O0OO0OOOOOOOOO00O [0 ]),int (O0OO0OOOOOOOOO00O [1 ]),100 ))
	OO00OOO00OO000O0O .append ((int (O00O000O00OOOOOOO [0 ]),int (O00O000O00OOOOOOO [1 ]),10 ))
	OO00OOO00OO000O0O .append ((int (O00O000O00OOOOOOO [0 ]),int (O00O000O00OOOOOOO [1 ]),5 ))
	for OOOOO0O0OOO0OO00O in range (0 ,4 ):
		if O00000OO0O0O0O000 [OOOOO0O0OOO0OO00O ]<99999 :
			OO00OOO00OO000O0O .append ((int (OO0OOO0O0O0OOO0O0 [OOOOO0O0OOO0OO00O ][0 ]),int (OO0OOO0O0O0OOO0O0 [OOOOO0O0OOO0OO00O ][1 ]),int (O0OO0OOOOOOOOO00O [0 ]),int (O0OO0OOOOOOOOO00O [1 ])))
			OO00OOO00OO000O0O .append ((int (OO0OOO0O0O0OOO0O0 [OOOOO0O0OOO0OO00O ][0 ]),int (OO0OOO0O0O0OOO0O0 [OOOOO0O0OOO0OO00O ][1 ]),int (O000000OO0OO00OOO [0 ]),int (O000000OO0OO00OOO [1 ])))
			OO00OOO00OO000O0O .append ((int (OO0OOO0O0O0OOO0O0 [OOOOO0O0OOO0OO00O ][0 ]),int (OO0OOO0O0O0OOO0O0 [OOOOO0O0OOO0OO00O ][1 ]),int (O00000OO0O0O0O000 [OOOOO0O0OOO0OO00O ]/O00000OO0O0O0O000 [O00OOOOO000O0000O ])*20 ))
	return (O00O000O00OOOOOOO ,OO00OOO00OO000O0O )
def l1l11l11111llll1l1ll (OOO0OO000000O0OOO ,O0O000O00OO0OOO00 ):
	O0OO000OO00O0OOOO =get_throwing_angle ()
	OOOOO0O00OO00O00O =(O0O000O00OO0OOO00 [0 ]-OOO0OO000000O0OOO [0 ],O0O000O00OO0OOO00 [1 ]-OOO0OO000000O0OOO [1 ])
	OOO0OO0O0O000O0OO =degrees (atan2 (OOOOO0O00OO00O00O [1 ],OOOOO0O00OO00O00O [0 ]))
	O00OOOO0O00O0OOO0 =None 
	OO00000OOO0O00O00 =((OOO0OO0O0O000O0OO -O0OO000OO00O0OOOO )+360 )%360 
	OOO0O0O0OOOO00OO0 =1.0 
	if OO00000OOO0O00O00 >180 :
		O00OOOO0O00O0OOO0 ='CW'
	else :
		O00OOOO0O00O0OOO0 ='CC'
	if OO00000OOO0O00O00 <10 or OO00000OOO0O00O00 >349 :
		OOO0O0O0OOOO00OO0 =0.3 
	return (OOO0O0O0OOOO00OO0 ,O00OOOO0O00O0OOO0 ,OO00000OOO0O00O00 )
def ll1111ll1ll1llll111l ():
	O00O0OOOOOOO00OOO =150.0 
	O0OOO000000OOO0OO =15000 ;
	OOOOO0O00OOO0O00O =get_velocity_tuple ()
	OO0O00OO0OOOOOOOO =get_position_tuple ()
	O000OO00OO0OO00O0 =(OO0O00OO0OOOOOOOO [0 ]+OOOOO0O00OOO0O00O [0 ],OO0O00OO0OOOOOOOO [1 ]+OOOOO0O00OOO0O00O [1 ])
	O0OO000O0OO00OOO0 =(0 ,0 )
	OOOOO0OOOOO00O000 =degrees (atan2 (OOOOO0O00OOO0O00O [1 ],OOOOO0O00OOO0O00O [0 ]))
	(O0O00OOOOOO00O00O ,OOOO00000O00OOO0O ,_O0O0000O0OOOOOOO0 )=get_the_radar_data (OOOOO0OOOOO00O000 )
	if OOOO00000O00OOO0O <O00O0OOOOOOO00OOO and (O0O00OOOOOO00O00O =="column"or O0O00OOOOOO00O00O =="hazard"):
		O0O0O0000OOO0OO00 =((cos (radians (OOOOO0OOOOO00O000 )))*OOOO00000O00OOO0O ,(sin (radians (OOOOO0OOOOO00O000 )))*OOOO00000O00OOO0O )
		OOO0OOO00000OOO00 =O000OO00OO0OO00O0 [0 ]-O0O0O0000OOO0OO00 [0 ];
		OOO000000O0OOOO00 =O000OO00OO0OO00O0 [1 ]-O0O0O0000OOO0OO00 [1 ];
		O0000OO0O0O00O000 =(OOO0OOO00000OOO00 **2 +OOO000000O0OOOO00 **2 )**0.5 
		O0OO000O0OO00OOO0 =(OOO0OOO00000OOO00 /O0000OO0O0O00O000 ,OOO000000O0OOOO00 /O0000OO0O0O00O000 )
		O0OO000O0OO00OOO0 =(OOO0OOO00000OOO00 *O0OOO000000OOO0OO ,OOO000000O0OOOO00 *O0OOO000000OOO0OO )
	return O0OO000O0OO00OOO0 
def start ():
	return "llll111l111l111lllll",{"SAVE_A":'zz'}
def llll111l111l111lllll ():
	O0OOOO0OO0O0O000O =get_my_stored_data ()
	OO0000OOO0000000O =None 
	if O0OOOO0OO0O0O000O [0 ]=='zz':
		OO0000OOO0000000O =(randint (100 ,650 ),randint (100 ,650 ))
	else :
		OO0000OOO0000000O =ll11111l111lllll1l1l ((O0OOOO0OO0O0O000O [0 ]))
	O0OO0OOOOO0O0O000 =get_position_tuple ()
	if get_if_have_weapon ():
		return "ll1lll1111l1l1lll111",{"SAVE_A":lll11lllllll1l11l1ll (OO0000OOO0000000O ),"ACLT_X":0 ,"ACLT_Y":0 }
	else :
		OOO0OO0OOO0O000O0 =[]
		for OO0000OOO00O0O000 in range (0 ,360 ,5 ):
			(OOOOO0O0OOOO0OO0O ,OOO00O0OO00OO00O0 ,_OOOO0OOO0O0O00000 )=get_the_radar_data (OO0000OOO00O0O000 )
			if OOOOO0O0OOOO0OO0O =='weapon':
				OOO0OO0OOO0O000O0 .append ((OOO00O0OO00OO00O0 ,OO0000OOO00O0O000 ))
			elif OOOOO0O0OOOO0OO0O =='player':
				OO0000OOO0000000O =((cos (radians (OO0000OOO00O0O000 )))*OOO00O0OO00OO00O0 +O0OO0OOOOO0O0O000 [0 ],(sin (radians (OO0000OOO00O0O000 )))*OOO00O0OO00OO00O0 +O0OO0OOOOO0O0O000 [1 ])
		if len (OOO0OO0OOO0O000O0 )==0 :
			OO0000OOOOOO00OOO =ll1111ll1ll1llll111l ()
			OO00OOOO0OO0OO0O0 =(OO0000OOOOOO00OOO [0 ],OO0000OOOOOO00OOO [1 ])
			if randint (1 ,10 )==1 :
				OO00OOOO0OO0OO0O0 =(OO00OOOO0OO0OO0O0 [0 ]+randint (-1 ,1 ),OO00OOOO0OO0OO0O0 [1 ]+randint (-1 ,1 ))
			OOO0OO00O0OOOO0OO =(OO00OOOO0OO0OO0O0 [0 ]**2 +OO00OOOO0OO0OO0O0 [1 ]**2 )**0.5 
			if OOO0OO00O0OOOO0OO !=0 :
				O0OO0O00OO0000O0O =OO00OOOO0OO0OO0O0 [0 ]/OOO0OO00O0OOOO0OO 
				O000OOOO0OOO0OOOO =OO00OOOO0OO0OO0O0 [1 ]/OOO0OO00O0OOOO0OO 
			else :
				O0OO0O00OO0000O0O =0 
				O000OOOO0OOO0OOOO =0 
			return "llll111l111l111lllll",{"SAVE_A":lll11lllllll1l11l1ll (OO0000OOO0000000O ),"WEAPON":True ,"ACLT_X":O0OO0O00OO0000O0O ,"ACLT_Y":O000OOOO0OOO0OOOO }
		else :
			OOO0OO0OOO0O000O0 .sort ()
			OO0000OOO00O0O000 =OOO0OO0OOO0O000O0 [0 ][1 ]
			OOO0O00000OOOOO00 =(cos (radians (OO0000OOO00O0O000 )))*5 
			O0OOOO0OOO00000OO =(sin (radians (OO0000OOO00O0O000 )))*5 
			O00OOO00OO0000000 =(OOO0O00000OOOOO00 ,O0OOOO0OOO00000OO )
			O0OO000O0O0OOOOOO =get_velocity_tuple ()
			OO00OOOO0OO0OO0O0 =(O00OOO00OO0000000 [0 ]-O0OO000O0O0OOOOOO [0 ],O00OOO00OO0000000 [1 ]-O0OO000O0O0OOOOOO [1 ])
			OO0000OOOOOO00OOO =ll1111ll1ll1llll111l ()
			OO00OOOO0OO0OO0O0 =(OO00OOOO0OO0OO0O0 [0 ]+OO0000OOOOOO00OOO [0 ],OO00OOOO0OO0OO0O0 [1 ]+OO0000OOOOOO00OOO [1 ])
			O0O000O00O000OOOO =(OO00OOOO0OO0OO0O0 [0 ]**2 +OO00OOOO0OO0OO0O0 [1 ]**2 )**0.5 
			O0OO0O00OO0000O0O =OO00OOOO0OO0OO0O0 [0 ]/O0O000O00O000OOOO 
			O000OOOO0OOO0OOOO =OO00OOOO0OO0OO0O0 [1 ]/O0O000O00O000OOOO 
			return "llll111l111l111lllll",{"SAVE_A":lll11lllllll1l11l1ll (OO0000OOO0000000O ),"WEAPON":True ,"ACLT_X":O0OO0O00OO0000O0O ,"ACLT_Y":O000OOOO0OOO0OOOO }
def ll1lll1111l1l1lll111 ():
	OO00OO0000OO0O0OO =10 
	OOOOOO00O0OO00OO0 =get_my_stored_data ()
	O0000000OO0O0OO00 =None 
	if OOOOOO00O0OO00OO0 [0 ]=='zz':
		O0000000OO0O0OO00 =(randint (100 ,650 ),randint (100 ,650 ))
	else :
		O0000000OO0O0OO00 =ll11111l111lllll1l1l ((OOOOOO00O0OO00OO0 [0 ]))
	O00000OOOOOOO00OO =get_velocity_tuple ()
	OOOO0O0O0000000OO =get_position_tuple ()
	OO0O00OOO0O0O0000 =degrees (atan2 (O0000000OO0O0OO00 [1 ],O0000000OO0O0OO00 [0 ]))
	OO00O00OO0000OOO0 =False 
	OO0O0000OOO0OO00O =False 
	for OO0O00O00O0O0OO00 in range (-5 ,5 ):
		O0O0OO0OOOOO00000 =(OO0O00O00O0O0OO00 +OO0O00OOO0O0O0000 +360 )%360 
		(O00000O00000OO0O0 ,OO0000O0O000O0OO0 ,_O00000O0O00000O0O )=get_the_radar_data (O0O0OO0OOOOO00000 )
		if O00000O00000OO0O0 =="column":
			OO00O00OO0000OOO0 =True 
		elif O00000O00000OO0O0 =="player":
			OO0O0000OOO0OO00O =True 
			OO0O00OOO0O0O0000 =O0O0OO0OOOOO00000 
			O00OO0O00OO00O000 =OO0000O0O000O0OO0 
			O0000000OO0O0OO00 =((cos (radians (OO0O00OOO0O0O0000 ))*O00OO0O00OO00O000 +OOOO0O0O0000000OO [0 ],(sin (radians (OO0O00OOO0O0O0000 ))*O00OO0O00OO00O000 +OOOO0O0O0000000OO [1 ])))
			break 
	O0OO00O00O0000O0O =(OOOO0O0O0000000OO [0 ]-O00000OOOOOOO00OO [0 ],OOOO0O0O0000000OO [1 ]-O00000OOOOOOO00OO [1 ])
	OO0000O0OO00OO00O =(O0OO00O00O0000O0O [0 ]-OOOO0O0O0000000OO [0 ],O0OO00O00O0000O0O [1 ]-OOOO0O0O0000000OO [1 ])
	O0O0O0OO00O0O000O =OO0000O0OO00OO00O 
	O000OO00OOO00OO00 =(OO0000O0OO00OO00O [0 ]**2 +OO0000O0OO00OO00O [1 ]**2 )**0.5 
	O0O0O0OO00O0O000O =((O0O0O0OO00O0O000O [0 ]/O000OO00OOO00OO00 )*5 ,(O0O0O0OO00O0O000O [1 ]/O000OO00OOO00OO00 )*5 )
	if O000OO00OOO00OO00 <OO00OO0000OO0O0OO :
		O0O0O0OO00O0O000O =(O0O0O0OO00O0O000O [0 ]*(O000OO00OOO00OO00 /OO00OO0000OO0O0OO ),O0O0O0OO00O0O000O [1 ]*(O000OO00OOO00OO00 /OO00OO0000OO0O0OO ))
	OO0000OO000000O0O =(O0O0O0OO00O0O000O [0 ]-O00000OOOOOOO00OO [0 ],O0O0O0OO00O0O000O [1 ]-O00000OOOOOOO00OO [1 ])
	OO0O00O0OOOO000O0 =(OO0000OO000000O0O [0 ]**2 +OO0000OO000000O0O [1 ]**2 )**0.5 
	OOO0O0O00OOOO0O00 =OO0000OO000000O0O [0 ]/OO0O00O0OOOO000O0 
	O0OO00OO0O0O000OO =OO0000OO000000O0O [1 ]/OO0O00O0OOOO000O0 
	(O0O0OO0OOO0OO0OOO ,OO0O0OOOO0O0O0000 )=ll1ll1ll1l1l111111ll (OOOO0O0O0000000OO ,O0000000OO0O0OO00 )
	(O00OOOOOOO000OOO0 ,OOOO000OO0O0O0O0O ,_O00000O0O00000O0O )=l1l11l11111llll1l1ll (OOOO0O0O0000000OO ,O0O0OO0OOO0OO0OOO )
	O0OO00OO0000O0OOO =(O00000OOOOOOO00OO [0 ]**2 +O00000OOOOOOO00OO [1 ]**2 )**0.5 
	if (O0OO00OO0000O0OOO >=0.1 ):
		return "ll1lll1111l1l1lll111",{"ACLT_X":OOO0O0O00OOOO0O00 ,"ACLT_Y":O0OO00OO0O0O000OO ,"ROT_"+OOOO000OO0O0O0O0O :O00OOOOOOO000OOO0 }
	else :
		return "l11111ll11ll11lll1ll",{"ACLT_X":0 ,"ACLT_Y":0 ,"ROT_"+OOOO000OO0O0O0O0O :O00OOOOOOO000OOO0 ,"SAVE_B":(chr (1 )+"z")}
def l1ll111l1lll1lll1l11 ():
	OO0O00OO000O000OO =get_my_stored_data ()
	OOOO00OO000O0O0OO =get_position_tuple ()
	OO0O0O0OO0OOO00OO =None 
	if OO0O00OO000O000OO [0 ]=='zz':
		OO0O0O0OO0OOO00OO =(randint (100 ,650 ),randint (100 ,650 ))
	else :
		OO0O0O0OO0OOO00OO =ll11111l111lllll1l1l ((OO0O00OO000O000OO [0 ]))
	O0OOOO0OO0OOO0000 =degrees (atan2 (OO0O0O0OO0OOO00OO [1 ],OO0O0O0OO0OOO00OO [0 ]))
	O00O0000O0OO00000 =None 
	O0OOO00O0OO0000O0 =None 
	O0OOOOO00O00O0O0O =ord (OO0O00OO000O000OO [1 ][0 ])
	OO00OOO0OOOOO0OO0 =False 
	OOO00O0O00O0O00O0 =False 
	OOOO000O00O0O000O =[]
	if O0OOOOO00O00O0O0O <180 :
		if O0OOOOO00O00O0O0O !=1 :
			for OOOOOOO0000OOO00O in range (-O0OOOOO00O00O0O0O ,O0OOOOO00O00O0O0O ):
				OOO00O0OOOO0O00O0 =(OOOOOOO0000OOO00O +O0OOOO0OO0OOO0000 +360 )%360 
				(O00O0000O0OO00000 ,OO0OO0O0O0O0000OO ,_OO0000OOOOO00O0OO )=get_the_radar_data (OOO00O0OOOO0O00O0 )
				OOOO000O00O0O000O .append ((int (OOOO00OO000O0O0OO [0 ]),int (OOOO00OO000O0O0OO [1 ]),int (OOOO00OO000O0O0OO [0 ]+cos (radians (OOO00O0OOOO0O00O0 ))*OO0OO0O0O0O0000OO ),int (OOOO00OO000O0O0OO [1 ]+(sin (radians (OOO00O0OOOO0O00O0 ))*OO0OO0O0O0O0000OO ))))
				if O00O0000O0OO00000 =="column":
					OO00OOO0OOOOO0OO0 =True 
					break 
				elif O00O0000O0OO00000 =="player":
					OOO00O0O00O0O00O0 =True 
					O0OOOO0OO0OOO0000 =OOO00O0OOOO0O00O0 
					O0OOO00O0OO0000O0 =OO0OO0O0O0O0000OO 
					break 
		else :
			(O00O0000O0OO00000 ,O0OOO00O0OO0000O0 ,_OO0000OOOOO00O0OO )=get_the_radar_data (O0OOOO0OO0OOO0000 )
			OOOO000O00O0O000O .append ((int (OOOO00OO000O0O0OO [0 ]),int (OOOO00OO000O0O0OO [1 ]),int (OOOO00OO000O0O0OO [0 ]+cos (radians (O0OOOO0OO0OOO0000 ))*O0OOO00O0OO0000O0 ),int (OOOO00OO000O0O0OO [1 ]+(sin (radians (O0OOOO0OO0OOO0000 ))*O0OOO00O0OO0000O0 ))))
			if O00O0000O0OO00000 =='player':
				OOO00O0O00O0O00O0 =True 
			elif O00O0000O0OO00000 =='column':
				OO00OOO0OOOOO0OO0 =True 
	else :
		O0OOOOO00O00O0O0O =1 
		for OOO00OO00O000OO0O in range (0 ,360 ,1 ):
			(O00O0000O0OO00000 ,O0OOO00O0OO0000O0 ,_OO0000OOOOO00O0OO )=get_the_radar_data (OOO00OO00O000OO0O )
			OOOO000O00O0O000O .append ((int (OOOO00OO000O0O0OO [0 ]),int (OOOO00OO000O0O0OO [1 ]),int (OOOO00OO000O0O0OO [0 ]+cos (radians (OOO00OO00O000OO0O ))*O0OOO00O0OO0000O0 ),int (OOOO00OO000O0O0OO [1 ]+(sin (radians (OOO00OO00O000OO0O ))*O0OOO00O0OO0000O0 ))))
			if O00O0000O0OO00000 =='player':
				O0OOOO0OO0OOO0000 =OOO00OO00O000OO0O 
				OOO00O0O00O0O00O0 =True 
				break 
			elif O00O0000O0OO00000 =='column':
				OO00OOO0OOOOO0OO0 =True 
	if OO00OOO0OOOOO0OO0 and not OOO00O0O00O0O00O0 :
		return "l1ll111l1lll1lll1l11",{"SAVE_B":(chr (185 )+"z")}
	if OOO00O0O00O0O00O0 :
		OO0O0O0OO0OOO00OO =((cos (radians (O0OOOO0OO0OOO0000 ))*O0OOO00O0OO0000O0 +OOOO00OO000O0O0OO [0 ],(sin (radians (O0OOOO0OO0OOO0000 ))*O0OOO00O0OO0000O0 +OOOO00OO000O0O0OO [1 ])))
		return "l11111ll11ll11lll1ll",{"SAVE_A":lll11lllllll1l11l1ll (OO0O0O0OO0OOO00OO )}
	else :
		return "l1ll111l1lll1lll1l11",{"SAVE_B":(chr (O0OOOOO00O00O0O0O +1 )+"z")}
def l11111ll11ll11lll1ll ():
	OO00000O00OOOOOO0 =get_my_stored_data ()
	O0O000O00O0O000OO =get_position_tuple ()
	O0OO0O00OOO00O0O0 =None 
	if OO00000O00OOOOOO0 [0 ]=='zz':
		O0OO0O00OOO00O0O0 =(randint (100 ,650 ),randint (100 ,650 ))
	else :
		O0OO0O00OOO00O0O0 =ll11111l111lllll1l1l ((OO00000O00OOOOOO0 [0 ]))
	(O000OO0OO0O000OO0 ,O00O00O0O000O0O0O )=ll1ll1ll1l1l111111ll (O0O000O00O0O000OO ,O0OO0O00OOO00O0O0 )
	(OOOOOOOO000OOOOOO ,O000OO0000000O0O0 ,OOO0OOOOO00OOO000 )=l1l11l11111llll1l1ll (O0O000O00O0O000OO ,O000OO0OO0O000OO0 )
	O00O00O0O000O0O0O .append ((int (O0O000O00O0O000OO [0 ]),int (O0O000O00O0O000OO [1 ]),int (min (OOO0OOOOO00OOO000 ,abs (OOO0OOOOO00OOO000 -360 )))))
	if OOO0OOOOO00OOO000 <1 or OOO0OOOOO00OOO000 >359 :
		return "llll111l111l111lllll",{"WEAPON":False ,"ACLT_X":0 ,"ACLT_Y":0 ,"SAVE_A":lll11lllllll1l11l1ll (O0OO0O00OOO00O0O0 )}
	return "l11111ll11ll11lll1ll",{"ROT_"+O000OO0000000O0O0 :OOOOOOOO000OOOOOO ,"ACLT_X":0 ,"ACLT_Y":0 ,"SAVE_A":lll11lllllll1l11l1ll (O0OO0O00OOO00O0O0 )}
